{{- if .Values.nginx.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-proxy
  namespace: {{ .Values.global.namespaces.nginx }}
  labels:
    app: nginx-proxy
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: nginx-proxy
  template:
    metadata:
      labels:
        app: nginx-proxy
    spec:
      containers:
        - name: nginx
          image: {{ .Values.nginx.image.repository | default "nginx" }}:{{ .Values.nginx.image.tag | default "latest" }}
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
          resources:
            {{- if .Values.nginx.resources }}
            {{- toYaml .Values.nginx.resources | nindent 12 }}
            {{- else }}
            limits: {}
            requests: {}
            {{- end }}
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            {{- if .Values.nginx.serverBlock }}
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: server-block.conf
            {{- end }}
            {{- if and (hasKey .Values "certManager") .Values.certManager.enabled }}
            - name: ssl-certs
              mountPath: /etc/nginx/ssl
              readOnly: true
            {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
        {{- if and (hasKey .Values "certManager") .Values.certManager.enabled }}
        - name: ssl-certs
          secret:
            secretName: nginx-tls
        {{- end }}
{{- end }} 