# Zoochacha 테스트 배포를 위한 values 파일
# 이 파일은 기존 환경과 충돌하지 않도록 네임스페이스와 리소스 이름을 변경합니다

# Global Values
global:
  environment: test
  domain: test-zoochacha.com
  adminDomain: test-admin.zoochacha.com
  # 네임스페이스 설정 - 모두 test- 접두사 사용
  namespaces:
    cert_manager: test-cert-manager
    argocd: test-argocd
    nginx: test-zoochacha
    db: test-zoochacha-db
  # 인스톨러 관련 설정
  installer:
    namespace: test-zoochacha
    serviceAccountName: test-zoochacha-installer

# 릴리스 이름 설정
nameOverride: "test-zoochacha"
fullnameOverride: "test-zoochacha"

# AWS 설정 - 테스트용 더미 값 설정
aws:
  region: ap-northeast-2

# 인스톨러 서비스 어카운트 네임스페이스 설정
serviceAccount:
  namespace: test-zoochacha

# Cert-Manager 설정 (이름은 하이픈 없는 camelCase 형식으로 사용)
certManager:
  enabled: false  # 테스트 환경에서는 비활성화
  installCRDs: false

# 이전 cert-manager 키와의 호환성 유지 (하이픈 포함)
cert-manager:
  enabled: false
  installCRDs: false

# Nginx Configuration
nginx:
  enabled: true
  image:
    repository: bitnami/nginx
    tag: 1.25.2-debian-11-r0
  service:
    type: ClusterIP  # 테스트 환경에서는 ClusterIP 사용
  serverBlock: |-
    server {
      listen 0.0.0.0:8080;
      
      # 헬스 체크 엔드포인트
      location /healthz {
        return 200 "healthy\n";
      }
      
      # 테스트 엔드포인트
      location / {
        return 200 "Welcome to Zoochacha Test Environment\n";
      }
    }

# 테스트용 간소화된 서비스 설정
services:
  - name: test_service
    serviceName: test-server
    port: 8080

# 네임스페이스 설정
namespaces:
  - name: test-cert-manager
    create: true
  - name: test-zoochacha
    create: true
  - name: test-zoochacha-db
    create: true
  - name: test-argocd
    create: true

# Database Configuration - 테스트를 위한 간소화된 설정
database:
  enabled: true
  type: mysql
  host: "mysql-0.mysql.test-zoochacha-db.svc.cluster.local"
  port: 3306
  database: test_zoochacha
  replicas: 1  # 테스트에서는 단일 레플리카만 사용
  image:
    repository: mysql
    tag: "5.7"
  service:
    port: 3306
  storageClass:
    name: test-mysql-sc
    provisioner: kubernetes.io/aws-ebs
    type: gp2
    reclaimPolicy: Delete  # 테스트 후 자동 삭제되도록 설정
    allowVolumeExpansion: true
  storage:
    size: 1Gi  # 테스트용 작은 용량
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 200m
      memory: 512Mi

# RBAC 설정
rbac:
  create: true
  serviceAccountName: test-zoochacha-installer
  namespace: test-zoochacha

# 훅 작업 관련 설정 - 모두 비활성화
hooks:
  enabled: false  # 모든 훅 작업 비활성화
  preInstall:
    enabled: false
  postInstall:
    enabled: false

# ArgoCD 설정
argocd:
  enabled: false  # 테스트 환경에서는 비활성화

# 민감 정보 - 테스트용 더미 값
secrets:
  aws:
    accessKeyID: "test-access-key"
    secretAccessKey: "test-secret-key"
    roleArn: "arn:aws:iam::123456789012:role/test-role"
  database:
    username: "test-user"
    password: "test-password"
    rootPassword: "test-root-password"

# 추가 API 키 등 설정 - 테스트용 더미 값
additionalSecrets:
  mapApiKey: "test-map-api-key"
  smsApiKey: "test-sms-api-key"

# 테스트용 리소스 제한 설정
replicaCount: 1
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

# 자동 스케일링 비활성화
autoscaling:
  enabled: false 